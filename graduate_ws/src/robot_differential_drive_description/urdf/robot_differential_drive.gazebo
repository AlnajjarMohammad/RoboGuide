<?xml version="1.0" ?>
<robot name="robot_differential_drive" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>
<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="right_wheel_1">
  <material>${body_color}</material>
  <mu1>15000</mu1>
  <mu2>15000</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="left_wheel_1">
  <material>${body_color}</material>
  <mu1>15000</mu1>
  <mu2>15000</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="caster_1">
  <material>${body_color}</material>
  <mu1>0.1</mu1>
  <mu2>0.1</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="lidar_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="camera_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo>


<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
</gazebo>

<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
</gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <!-- Plugin update rate in Hz -->
    <updateRate>20</updateRate> <!-- Adjusted to a reasonable rate -->

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>Revolute 2</leftJoint> <!-- Ensure joint names match URDF -->

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>Revolute 1</rightJoint> <!-- Ensure joint names match URDF -->

    <!-- The distance from the center of one wheel to the other, in meters -->
    <wheelSeparation>0.12</wheelSeparation>

    <!-- Diameter of the wheels, in meters -->
    <wheelDiameter>0.10</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Commenting out the following lines to prevent Gazebo from publishing odometry -->
    <!-- Topic to publish nav_msgs/Odometry messages -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame -->
<odometryFrame>odom</odometryFrame> 

    <!-- Robot frame to calculate odometry from -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD -->
    <odometrySource>0</odometrySource> <!-- Use encoder data -->

    <!-- Set to true to publish transforms for the wheel links -->
    <publishWheelTF>false</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry -->
    <publishOdom>false</publishOdom> <!-- Disable odom publishing -->

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels -->
    <legacyMode>false</legacyMode> <!-- Ensure wheels are not swapped unless needed -->

  </plugin>
</gazebo>


<!-- hokuyo 
  <gazebo reference="lidar_1">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>12</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>4.5</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar_1</frameName>
      </plugin>
    </sensor>
  </gazebo> -->
  
  <!-- camera -->
  <gazebo reference="camera_1">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</robot>
